input {
  jdbc {
    id => "index-movies"
    jdbc_connection_string => "jdbc:postgresql://${HOST}:${PORT}/${DATABASE}?user=${USER}&password=${PASSWORD}"
    jdbc_user => "${USER}"
    jdbc_password => "${PASSWORD}"
    jdbc_driver_library => "/usr/share/logstash/drivers/postgresql-42.2.14.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_validate_connection => true
    statement_filepath => "/usr/share/logstash/pipeline/res/get_movies.sql"
    tags => ["example"]
    schedule => "*/1 * * * *"
  }
}

filter {
  json {
    source => "genres"
    target => "genres"
  }
  grok {
    match => { "release_date" => "^%{YEAR:year}-" }
    add_field => { "release_year" => "%{year}" }  
  }
  ruby { 
    code => "event.set('release_date', ((event.get('release_date').to_f*1000).to_i))" 
  }
}

output {
  elasticsearch {
    hosts => ["${ELASTICSEARCH_URL}"]
    index => "movies-without-mapping"
    document_id => "%{id}"
    ecs_compatibility => disabled
    action => "update"
    doc_as_upsert => true
  }
  elasticsearch {
    hosts => ["${ELASTICSEARCH_URL}"]
    index => "movies-with-mapping"
    document_id => "%{id}"
    ecs_compatibility => disabled
    action => "update"
    doc_as_upsert => true
  }
  elasticsearch {
    hosts => ["${ELASTICSEARCH_URL}"]
    index => "movies-with-mapping-long"
    document_id => "%{id}"
    ecs_compatibility => disabled
    action => "update"
    doc_as_upsert => true
  }
  stdout {
      codec => rubydebug
  }
}
